{"componentChunkName":"component---src-lekoarts-gatsby-theme-minimal-blog-core-templates-post-query-tsx","path":"/blog/tips-end-to-end-testing-puppeteer","result":{"data":{"post":{"__typename":"MdxPost","slug":"/blog/tips-end-to-end-testing-puppeteer","title":"Tips for End to End Testing with Puppeteer","date":"08.06.2020","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"Software Testing","slug":"software-testing"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tips for End to End Testing with Puppeteer\",\n  \"subtitle\": \"Getting up to speed with Puppeteer!\",\n  \"date\": \"2020-06-08T00:00:00.000Z\",\n  \"slug\": \"/blog/tips-end-to-end-testing-puppeteer\",\n  \"tags\": [\"JavaScript\", \"Software Testing\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ScrollToTopButton, {\n    mdxType: \"ScrollToTopButton\"\n  }), mdx(\"small\", null, mdx(\"a\", {\n    href: \"https://ui.toast.com/weekly-pick/ko_20200630/\",\n    target: \"_blank\",\n    title: \"Puppeteer\\uB85C E2E \\uD14C\\uC2A4\\uD2B8\\uD558\\uAE30 \\uD301 - Puppeteer\\uC640 \\uD568\\uAED8 \\uC18D\\uB3C4 \\uB192\\uC774\\uAE30! | TOAST UI :: Make Your Web Delicious!\"\n  }, \"This article is available in Korean | \\uD55C\\uAD6D\\uC5B4 \\uAC00\\uB2A5\")), mdx(\"p\", null, \"These are exciting times for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"End to End (E2E)\"), \" testing in the JavaScript world. In the last couple of years,\\ntools such as \", mdx(\"a\", {\n    href: \"https://www.cypress.io/\",\n    target: \"_blank\",\n    title: \"JavaScript End to End Testing Framework | cypress.io\"\n  }, \"cypress\"), \" and \", mdx(\"a\", {\n    href: \"https://pptr.dev/\",\n    target: \"_blank\",\n    title: \"Puppeteer Official Home\"\n  }, \"Puppeteer\"), \" have flooded the JavaScript community and gain a fast adoption.\"), mdx(\"p\", null, \"Today I'm writing about Puppeteer.\"), mdx(\"p\", null, \"I want to share a pragmatic list of tips and resources that can help you get a fast overall understanding of things to\\nconsider when using Puppeteer, and what it has to offer.\"), mdx(\"h6\", {\n    \"id\": \"topics-ill-cover\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Topics I'll Cover\", mdx(\"a\", _extends({\n    parentName: \"h6\"\n  }, {\n    \"href\": \"#topics-ill-cover\",\n    \"aria-label\": \"topics ill cover permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#getting-things-running\"\n  }), \"Getting things running\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#writing-tests\"\n  }), \"Writing Tests\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#debugging\"\n  }), \"Debugging\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#performance-automation\"\n  }), \"Performance Automation\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#browser-support\"\n  }), \"Browser Support\"))), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"getting-things-running\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Getting things running\", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#getting-things-running\",\n    \"aria-label\": \"getting things running permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"In this section, I discuss the main aspects of running a test with Puppeteer, including some interoperability\\naspects that we should consider, such as the usage of an underlying testing library/framework such as Jest.\"), mdx(\"h5\", {\n    \"id\": \"running-tests-in-parallel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Running tests in parallel\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#running-tests-in-parallel\",\n    \"aria-label\": \"running tests in parallel permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"To launch different browser instances to run your test suite, you can rely on your chosen test runner. For example, with \", mdx(\"a\", {\n    href: \"https://jestjs.io/\",\n    target: \"_blank\",\n    title: \"Jest \\xB7 \\uD83C\\uDCCF Delightful JavaScript Testing\"\n  }, \"Jest\"), \", I leverage the config \", mdx(\"a\", {\n    href: \"https://jestjs.io/docs/en/cli.html#--maxworkersnumstring\",\n    target: \"_blank\",\n    title: \"Max Workers Jest Documentation\"\n  }, \"maxWorkers\"), \" to define how many browser sessions I allow to run concurrently.\"), mdx(\"h5\", {\n    \"id\": \"be-aware-of-the-global-timeout-value\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Be aware of the global timeout value\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#be-aware-of-the-global-timeout-value\",\n    \"aria-label\": \"be aware of the global timeout value permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"You want to increase the default global value for a test to timeout. E2E tests might take up several seconds to run. If you're using Jest, you can configure the timeout value with the property \", mdx(\"a\", {\n    href: \"https://jestjs.io/docs/en/configuration#testtimeout-number\",\n    target: \"_blank\",\n    title: \"testTimeout Jest Documentation\"\n  }, \"testTimeout\"), \", which for Jest 26.0 defaults to 5 seconds.\"), mdx(\"p\", null, \"Here's an example of my \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"jest.config.js\"), \" with the mentioned configurations.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=jest.config.js\"\n  }), \"module.exports = {\\n  verbose: true,\\n  rootDir: \\\".\\\",\\n  testTimeout: 30000,\\n  maxWorkers: 3,\\n};\\n\")), mdx(\"p\", null, \"If you're using (for example) \", mdx(\"a\", {\n    href: \"https://jestjs.io/docs/en/configuration#testtimeout-number\",\n    target: \"_blank\",\n    title: \"Mocha - the fun, simple, flexible JavaScript test framework\"\n  }, \"mocha\"), \", you can add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this.timeout(VALUE_IN_SECONDS);\"), \" at the top level of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"describe\"), \" block.\"), mdx(\"br\", null), mdx(\"h5\", {\n    \"id\": \"abstracting-puppeteerlaunch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Abstracting puppeteer.launch\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#abstracting-puppeteerlaunch\",\n    \"aria-label\": \"abstracting puppeteerlaunch permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"To bootstrap your test, you have to run \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-puppeteerlaunchoptions\",\n    target: \"_blank\",\n    title: \"puppeteer.launch Documentation\"\n  }, \"puppeteer.lauch\"), \". I recommend\\nyou to be abstract this call within a wrapper function. Doing so allows you to centralize\\nall your test environment customizations easily. I'm referring to making the following things \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"configurable\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow the client to specify what page the browser should open on.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow the client to decide under what \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"network conditions\"), \" the test runs. I'll \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#throttling-network-connection-speed\"\n  }), \"also cover this in this article\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Allow the client to specify things like whether the \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-puppeteerlaunchoptions\",\n    target: \"_blank\",\n    title: \"puppeteer.launch Documentation\"\n  }, \"DevTools\"), \" are open etc.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=boot.js\"\n  }), \"import puppeteer from \\\"puppeteer\\\";\\n\\nexport default async function boot(options = {}) {\\n  let page = null;\\n  let browser = null;\\n\\n  const { goToTargetApp = true, headless = true, devtools = false, slowMo = false } = options;\\n\\n  browser = await puppeteer.launch({\\n    headless,\\n    devtools,\\n    ...(slowMo && { slowMo }),\\n  });\\n\\n  if (goToTargetApp) {\\n    page = await browser.newPage();\\n    // I'm assuming there's some environment variable here\\n    // that points towards the app we're going to test\\n    await page.goto(process.env.APP_URL);\\n  }\\n\\n  return { page };\\n}\\n\")), mdx(\"p\", null, \"I like to have my launch function just dealing with the bootstrap configuration aspects of my test environment and launch the application. I try to keep it as slimmer as possible, but sometimes I feel the urge to add more stuff here. There's a saying:\"), mdx(\"br\", null), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Functions should do one thing. They should do it well. They should do it only.\\\"\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"source\"), \": \", mdx(\"a\", {\n    href: \"http://cleancoder.com/products\",\n    target: \"_blank\",\n    rel: \"nofollow\",\n    title: \"Uncle Bob Martin\"\n  }, \"Clean Code by Robert C. Martin\")), mdx(\"br\", null), mdx(\"h5\", {\n    \"id\": \"throttling-network-connection-speed\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Throttling Network Connection Speed\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#throttling-network-connection-speed\",\n    \"aria-label\": \"throttling network connection speed permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"You can run your tests under different network speed conditions. Let me share the pattern I use \", mdx(\"a\", {\n    href: \"https://gist.github.com/trungpv1601/2ccd3cc998149a84ba80ed7a4c9ef562\",\n    target: \"_blank\",\n    title: \"Network throttling in Puppeteer GitHub Gist\"\n  }, \"based on this gist that I luckily found\"), \".\"), mdx(\"p\", null, \"If you \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#abstracting-puppeteerlaunch\"\n  }), \"abstract puppeteer.launch\"), \", your test could switch between network presets just by doing the following.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=boot.js\"\n  }), \"import puppeteer from \\\"puppeteer\\\";\\nimport NETWORK_PRESETS from \\\"./network-presets\\\";\\n\\nexport default async function boot(options = {}) {\\n  let page = null;\\n  let browser = null;\\n\\n  const { goToTargetApp = true, headless = true, devtools = false, slowMo = false } = options;\\n\\n  browser = await puppeteer.launch({\\n    headless,\\n    devtools,\\n    ...(slowMo && { slowMo }),\\n  });\\n\\n  if (goToTargetApp) {\\n    page = await browser.newPage();\\n    // I'm assuming there's some environment variable here\\n    // that points towards the app we're going to test\\n    await page.goto(`${process.env.TARGET_APP_URL}${targetAppQueryParams}`);\\n\\n    if (network && NETWORK_PRESETS[network]) {\\n      // setup custom network speed\\n      const client = await page.target().createCDPSession();\\n      await client.send(\\\"Network.emulateNetworkConditions\\\", NETWORK_PRESETS[network]);\\n    }\\n  }\\n\\n  return { page };\\n}\\n\")), mdx(\"br\", null), mdx(Accordion, {\n    summary: \"network-presets.js\",\n    mdxType: \"Accordion\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:title=network-presets.js\"\n  }), \"// source: https://gist.github.com/trungpv1601/2ccd3cc998149a84ba80ed7a4c9ef562\\nexport default {\\n  GPRS: {\\n    offline: false,\\n    downloadThroughput: (50 * 1024) / 8,\\n    uploadThroughput: (20 * 1024) / 8,\\n    latency: 500,\\n  },\\n  Regular2G: {\\n    offline: false,\\n    downloadThroughput: (250 * 1024) / 8,\\n    uploadThroughput: (50 * 1024) / 8,\\n    latency: 300,\\n  },\\n  Good2G: {\\n    offline: false,\\n    downloadThroughput: (450 * 1024) / 8,\\n    uploadThroughput: (150 * 1024) / 8,\\n    latency: 150,\\n  },\\n  Regular3G: {\\n    offline: false,\\n    downloadThroughput: (750 * 1024) / 8,\\n    uploadThroughput: (250 * 1024) / 8,\\n    latency: 100,\\n  },\\n  Good3G: {\\n    offline: false,\\n    downloadThroughput: (1.5 * 1024 * 1024) / 8,\\n    uploadThroughput: (750 * 1024) / 8,\\n    latency: 40,\\n  },\\n  Regular4G: {\\n    offline: false,\\n    downloadThroughput: (4 * 1024 * 1024) / 8,\\n    uploadThroughput: (3 * 1024 * 1024) / 8,\\n    latency: 20,\\n  },\\n  DSL: {\\n    offline: false,\\n    downloadThroughput: (2 * 1024 * 1024) / 8,\\n    uploadThroughput: (1 * 1024 * 1024) / 8,\\n    latency: 5,\\n  },\\n  WiFi: {\\n    offline: false,\\n    downloadThroughput: (30 * 1024 * 1024) / 8,\\n    uploadThroughput: (15 * 1024 * 1024) / 8,\\n    latency: 2,\\n  },\\n};\\n\"))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h5\", {\n    \"id\": \"loading-a-browser-extension\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Loading a Browser Extension\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#loading-a-browser-extension\",\n    \"aria-label\": \"loading a browser extension permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"Here's how you can load a browser extension.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// 1. launch puppeeter pass along the EXTENSION_PATH within your project\\n// a relative path that points to the directory you output your extension assets\\nbrowser = await puppeteer.launch({\\n  // extension are allowed only in head-full mode\\n  headless: false,\\n  devtools,\\n  args: [`--disable-extensions-except=${process.env.EXTENSION_PATH}`, `--load-extension=${process.env.EXTENSION_PATH}`],\\n  ...(slowMo && { slowMo }),\\n});\\n\\n// 2. find the extension by the title\\n// you might want to tackle this differently\\n// depending on your use case\\nconst targets = await browser.targets();\\nconst extensionTarget = targets.find(({ _targetInfo }) => {\\n  return _targetInfo.title === \\\"my extension page title\\\";\\n});\\n\\n// 3. getting the extensionId from the URL\\n// if you have a fixed extensionId you can just pass in an\\n// environment variable with that value, otherwise this works fine\\nconst partialExtensionUrl = extensionTarget._targetInfo.url || \\\"\\\";\\nconst [, , extensionID] = partialExtensionUrl.split(\\\"/\\\");\\n// here the entry point of the extension is an html file called \\\"popup.html\\\"\\nconst extensionPopupHtml = \\\"popup.html\\\";\\n\\n// 4. open the chrome extension in a new tab\\n// notice that to properly build the extension URL you need the\\n// extensionId and the entrypoint resource\\nextensionPage = await browser.newPage();\\nextensionUrl = `chrome-extension://${extensionID}/${extensionPopupHtml}`;\\n\\nawait extensionPage.goto(extensionUrl);\\n\\n// ... now use extensionPage to interact with the extension\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"If you want to read through about testing chrome extensions with Puppeteer, I\\nrecommend this article: \", mdx(\"a\", {\n    href: \"https://gokatz.me/blog/automate-chrome-extension-testing/\",\n    target: \"_blank\",\n    title: \"Automate the UI Testing of your chrome extension - Gokul Kathirvel\"\n  }, \"Automate the UI\\nTesting of your chrome extension\"), \" by \", mdx(\"a\", {\n    href: \"https://gokatz.me/\",\n    target: \"_blank\",\n    title: \"Gokul Kathirvel\"\n  }, \"Gokul Kathirvel\"), \".\"), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"writing-tests\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Writing Tests\", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#writing-tests\",\n    \"aria-label\": \"writing tests permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"Apart from the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#clearing-text-from-an-input-field\"\n  }), \"last subsection\"), \", what I discuss next,\\ncan be easily found in the official documentation. I'm just going to step on those topics that\\nI consider to be essential parts of the Puppeteer API.\"), mdx(\"h5\", {\n    \"id\": \"working-with-pageevaluate\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Working with page.evaluate\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#working-with-pageevaluate\",\n    \"aria-label\": \"working with pageevaluate permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"You'll need to get used to the detail that when using \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.0.3&show=api-pageevaluatepagefunction-args\",\n    target: \"_blank\",\n    title: \"Puppeteer Docs page.evaluate\"\n  }, \"page.evaluate\"), \", you run on the page context,\\nmeaning even if you're using arrow functions as an argument to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page.evaluate\"), \", you can't refer\\nto things out of the scope of that function. You need to provide all the data you'll need as the\\nthird argument of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"page.evaluate\"), \". Keep this in mind.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// extracting the \\\"value\\\" from an input element\\nconst inputValue = await inputEl.evaluate((e) => e.value);\\n\")), mdx(\"br\", null), mdx(\"h5\", {\n    \"id\": \"pagewaitforselector--pagewaitforfunction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"page.waitForSelector & page.waitForFunction\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#pagewaitforselector--pagewaitforfunction\",\n    \"aria-label\": \"pagewaitforselector  pagewaitforfunction permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"Quickly getting familiar with the APIs \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-pagewaitforselectorselector-options\",\n    target: \"_blank\",\n    title: \"page.waitForSelector Puppeteer Documentation\"\n  }, \"page.waitForSelector\"), \" and \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-pagewaitforfunctionpagefunction-options-args\",\n    target: \"_blank\",\n    title: \"page.waitForFunction Puppeteer Documentation\"\n  }, \"page.waitForFunction\"), \" can reveal itself very productive. If you have a couple of tests to write changes that you'll need to wait for some condition to be met in the UI before you allowing your test to proceed, are high. Suspend the test flow and wait for the UI is a common practice, not exclusive to Puppeteer. See the below examples for some basic usages.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// this function waits for the menu to appear before\\n// proceeding, this way we can ensure that  we can interact\\n// with the list items in the menu\\nconst getSmuiSelectOptions = async () => {\\n  const selector = \\\".mdc-menu-surface li\\\";\\n  await page.waitForSelector(selector, { timeout: 1000 });\\n  return await page.$$(selector);\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// wait for a snackbar to appear when some item is deleted in the application\\nawait extensionPage.waitForFunction(\\n  () => !!document.querySelector('*[data-testid=\\\"global-snackbar\\\"]').innerText.includes(\\\"deleted\\\"),\\n  {\\n    timeout: 2000,\\n  },\\n);\\n\")), mdx(\"p\", null, \"There's a decision you need to make. The choice is whereas you should have a higher or lower timeout. I usually try to advocate for lower as possible, because we want to keep our tests fast. Running E2E tests against systems where you need to perform (not mocked) network requests, means that you need to account for network instability, altough\\nusually you'll run under \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"perfect\"), \" network conditions, you might want to cut some slack to the timeout value.\"), mdx(\"h5\", {\n    \"id\": \"elementselect\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"element.select\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#elementselect\",\n    \"aria-label\": \"elementselect permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"I like the way it's possible to select options \", mdx(\"a\", {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select\",\n    target: \"_blank\",\n    title: \"<select> - HTML: Hypertext Markup Language | MDN\"\n  }, \"on a native HTML select element\"), \". It works both for single and multiple selections, and it feels natural.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"// selecting an HTTP method in a select element with id \\\"custom-http-method\\\"\\nconst selectEl = await page.$(\\\"#custom-http-method\\\");\\n\\nawait selectEl.select(\\\"POST\\\");\\n\")), mdx(\"p\", null, \"While \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"element.select\"), \" it's convenient, you'll probably have to approach this\\ndifferently for custom select fields built on a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div > ul > li\"), \" structure with a\\nhidden input field, for instance \", mdx(\"a\", {\n    href: \"https://material-ui.com/components/selects/#select\",\n    target: \"_blank\",\n    title: \"Select React component - Material-UI\"\n  }, \"select Material UI components\"), \".\"), mdx(\"h5\", {\n    \"id\": \"screenshots\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Screenshots\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#screenshots\",\n    \"aria-label\": \"screenshots permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"For specific test cases, I like to output a collection of screenshots that build a\\ntimeline of how my application looks throughout the test. Screenshotting in between\\nyour test helps you get an initial pointer to what you\\nshould be debugging in a failing test. Here's my small utility that wraps \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-pagescreenshotoptions\",\n    target: \"_blank\",\n    title: \"page.screenshot Puppeteer Documentation\"\n  }, \"page.screenshot\"), \"\\nAPI.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:test-utils.js\"\n  }), \"// wrapping the call to `page.screenshot` just to avoid it\\n// breaking my test in case the screenshot fails\\nexport async function prtScn(page, path = `Screenshot ${new Date().toString()}`) {\\n  try {\\n    await page.screenshot({ path, type: \\\"png\\\", fullPage: true });\\n  } catch (error) {\\n    // eslint-disable-next-line no-console\\n    console.error(error);\\n    // eslint-disable-next-line no-console\\n    console.info(\\\"Failed to take screenshot but test will proceed...\\\");\\n    return Promise.resolve();\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import * as utils from \\\"test-utils\\\";\\n\\n// (...)\\n\\n// Note: you can make this utility a Class and pass along the page\\n// as context so that you don't need to pass it in everytime you\\n// need to take a screenshot\\nawait utils.prtScn(page);\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h5\", {\n    \"id\": \"page-reloads\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Page Reloads\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#page-reloads\",\n    \"aria-label\": \"page reloads permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"With the \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-pagereloadoptions\",\n    target: \"_blank\",\n    title: \"page.reload Puppeteer Documentation\"\n  }, \"page.reload\"), \" API. You can\\nspecify a set of options that allow you to wait for specific underlying browser tasks to idle before proceeding.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"await page.reload({ waitUntil: [\\\"networkidle0\\\"] });\\n\")), mdx(\"p\", null, \"In this above example, we reload the page with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"networkidle0\"), \", which does not allow the test to proceed unless there are no HTTP requests within a half a second period.\"), mdx(\"h5\", {\n    \"id\": \"clearing-text-from-an-input-field\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Clearing Text from an Input Field\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#clearing-text-from-an-input-field\",\n    \"aria-label\": \"clearing text from an input field permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"I was stunned not to find a very out-of-the-box way to clear an input field. A few developers \", mdx(\"a\", {\n    href: \"https://github.com/puppeteer/puppeteer/issues/3094\",\n    target: \"_blank\",\n    title: \"Feature request: Add 'clear' option to the .type() function \\xB7 Issue #3094 \\xB7 puppeteer/puppeteer\"\n  }, \"have expressed interest in this feature\"), \", but it seems there's no interest on the other end. I've found a way to do it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript:test-utils.js\"\n  }), \"/**\\n * Clears an element\\n * @param {ElementHandle} el\\n */\\nexport async function clear(el) {\\n  await el.click({ clickCount: 3 });\\n  await el.press(\\\"Backspace\\\");\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"It only works on Chrome\"), \" as it takes advantage of the functionality where three consecutive clicks in a text area/input field select the whole text. After that, you need to trigger a keyboard event to clear the entire field.\"), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"debugging\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Debugging\", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#debugging\",\n    \"aria-label\": \"debugging permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"I want to highlight some debugging techniques. Especially the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slowMo\"), \" option.\"), mdx(\"h5\", {\n    \"id\": \"debugging-with-slowmo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Debugging with slowMo\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#debugging-with-slowmo\",\n    \"aria-label\": \"debugging with slowmo permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"You'll want to use \", mdx(\"a\", {\n    href: \"https://pptr.dev/#?product=Puppeteer&version=v3.1.0&show=api-puppeteerlaunchoptions\",\n    target: \"_blank\",\n    title: \"puppeteer.launch Documentation\"\n  }, \"slowMo\"), \" to debug individual tests. The option allows you to slow down the interactions (the steps) of your E2E test so that you can see what's going on, almost like seeing an actual human interacting with your application. I can't emphasize enough how valuable this is.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"page.launch({ slowMo: 50 });\\n\")), mdx(\"p\", null, \"In the following GIFs you can see the difference of running without and with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slowMo\"), \" option respectivelly.\"), mdx(GIF, {\n    name: \"tweak-no-slowmo\",\n    mdxType: \"GIF\"\n  }), mdx(Caption, {\n    text: function text() {\n      return mdx(\"p\", null, \"E2E test on the tweak chrome extension \", mdx(\"b\", null, \"without slowMo\"), \". You can't possibly understand what's going on.\");\n    },\n    gif: true,\n    mdxType: \"Caption\"\n  }), mdx(\"br\", null), mdx(GIF, {\n    name: \"tweak-slowmo\",\n    mdxType: \"GIF\"\n  }), mdx(Caption, {\n    text: function text() {\n      return mdx(\"p\", null, \"E2E test on the tweak chrome extension \", mdx(\"b\", null, \"with slowMo\"), \". You can see the characters appearing in the 'URL' as if a human would be typing.\");\n    },\n    gif: true,\n    mdxType: \"Caption\"\n  }), mdx(\"p\", null, \"In these examples I'm using the \", mdx(\"a\", {\n    href: \"https://tweak-extension.com/\",\n    target: \"_blank\",\n    title: \"tweak browser extension, intercept and mock HTTP requests\"\n  }, \"tweak browser extension\"), \" to demo the different use cases.\"), mdx(\"p\", null, \"For more awesome tips for debugging, I highly recommend this short article on Debugging Tips from Google.\"), mdx(\"h5\", {\n    \"id\": \"using-debugger\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Using debugger\", mdx(\"a\", _extends({\n    parentName: \"h5\"\n  }, {\n    \"href\": \"#using-debugger\",\n    \"aria-label\": \"using debugger permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"I got this one from \", mdx(\"a\", {\n    href: \"https://developers.google.com/web/tools/puppeteer/debugging\",\n    target: \"_blank\",\n    title: \"Debugging \\xA0|\\xA0 Tools for Web Developers \\xA0|\\xA0 Google Developers\"\n  }, \"Google debugging tips\"), \". I had the habit of\\nthrowing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sleep\"), \" statement to stop my tests for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"X\"), \" seconds and inspect the application\\nto see why the tests were breaking. But now I completely shifted to this.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"await page.evaluate(() => {\\n  debugger;\\n});\\n\")), mdx(\"p\", null, \"For more great debugging tips, I highly recommend \", mdx(\"a\", {\n    href: \"https://developers.google.com/web/tools/puppeteer/debugging\",\n    target: \"_blank\",\n    title: \"Debugging \\xA0|\\xA0 Tools for Web Developers \\xA0|\\xA0 Google Developers\"\n  }, \"this short article on Debugging Tips\"), \" from Google.\"), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"performance-automation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Performance Automation\", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#performance-automation\",\n    \"aria-label\": \"performance automation permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"There's quite a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"buzz\"), \" going on about using Puppeteer to automate web performance\\ntesting. I couldn't write this article without giving a shout out to \", mdx(\"a\", {\n    href: \"https://addyosmani.com/\",\n    target: \"_blank\",\n    title: \"AddyOsmani.com\"\n  }, \"Addy Osmani\"), \" on the\\nwork developed on \", mdx(\"a\", {\n    href: \"https://github.com/addyosmani/puppeteer-webperf\",\n    target: \"_blank\",\n    title: \"Automating Web Performance testing with Puppeteer\"\n  }, \"addyosmani/puppeteer-webperf\"), \", which I couldn't\\nrecommend more. Within the project \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"README.md\"), \" you'll find the most organized\\nset of examples to tune your performance automation.\"), mdx(\"br\", null), mdx(\"h4\", {\n    \"id\": \"browser-support\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"Browser Support\", mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#browser-support\",\n    \"aria-label\": \"browser support permalink\",\n    \"className\": \"anchor after\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"style\": {\n      \"paddingLeft\": \"12px\"\n    },\n    \"width\": \"28\",\n    \"height\": \"16\",\n    \"fill\": \"#9f7aea\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))))), mdx(\"p\", null, \"According to the \", mdx(\"a\", {\n    href: \"https://pptr.dev/\",\n    target: \"_blank\",\n    title: \"Puppeteer Official Home\"\n  }, \"official documentation\"), \", you can use Puppeteer with Firefox, with the caveat that you might encounter some issues since this capability is experimental at the time of this writing. You can specify which browser to run via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"puppeteer.launch\"), \" options API that I've covered \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#abstracting-puppeteerlaunch\"\n  }), \"in this section\"), \".\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What are your favorite bits of Puppeteer? What would you recommend me to learn next?\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"These are exciting times for  End to End (E2E)  testing in the JavaScript world. In the last couple of years,\ntools such as  cypress  and…","timeToRead":5,"banner":null,"parent":{"__typename":"Mdx","frontmatter":{"subtitle":"Getting up to speed with Puppeteer!"}}}},"pageContext":{"slug":"/blog/tips-end-to-end-testing-puppeteer","formatString":"DD.MM.YYYY"}}}